# server
server:
  port: 8080
  tomcat:
    max-swallow-size: -1
    redirect-context-root:
  servlet:
    context-path: /zjlyj
# management
management:
  endpoints:
    web:
      exposure:
        include: "*"



# spring
spring:
  # file
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB
      enabled: true
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  # datasource
  datasource:
    druid:
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: 123456
        allow:
      web-stat-filter:
        enabled: true
    dynamic:
      primary: mydb
      strict: false
      druid:
        # pool
        initial-size: 5
        min-idle: 5
        max-active: 20
        # 获取链接等待超时时间
        max-wait: 60000
        # ，检测需要关闭的空闲连接时间，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 连接池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 达梦不支持wall
        filters: stat
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      datasource:
        mydb:
          url: jdbc:mysql://localhost:3306/zjlyj?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false
          username: root
          password: root
          driver-class-name: com.mysql.cj.jdbc.Driver

#mybatis plus 设置
mybatis-plus:
  mapper-locations: classpath*:com/sxgw/knowledge/mapper/server/*/xml/*Mapper.xml
  global-config:
    # 关闭MP3.0自带的banner
    banner: false
    db-config:
      #主键类型  0:"数据库ID自增",1:"该类型为未设置主键类型", 2:"用户输入ID",3:"全局唯一ID (数字类型唯一ID)", 4:"全局唯一ID UUID",5:"字符串全局唯一ID (idWorker 的字符串表示)";
      id-type: auto
      # 默认数据库表下划线命名
      table-underline: true
    #configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  type-handlers-package: com.sxgw.knowledge.common.core.web.handler
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
# logging
logging:
  config: classpath:logback-spring.xml
  level:
    root: info
    com.sxgw.knowledge.server.*.mapper.*: debug

# debug
debug: true
#上传文件配置
upload:
  root: ./upload
  size: 10737418240